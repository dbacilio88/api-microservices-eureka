plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bacsystem.api'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

ext {
    set('springCloudVersion', "2024.0.1")
    set('springVersion', "3.4.4")
    set('junitJupiter', '5.10.0')
    set('solution', 'configuration')
    set('log4j2Version', '2.24.3')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {

        resolutionStrategy {
            eachDependency {
                if (it.requested.group == 'org.apache.logging.log4j') {
                    it.useVersion("${log4j2Version}")
                }
            }
        }
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    //implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.mapstruct:mapstruct:1.6.2'
    compileOnly 'org.modelmapper:modelmapper-parent:3.2.0'

    //Libraries bacsystem:
    implementation 'com.bacsystem.lib:lib-microservices-configuration:2.0.1'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.junit:junit-bom:${junitJupiter}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
